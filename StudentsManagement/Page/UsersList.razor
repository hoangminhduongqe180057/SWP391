@page "/users-list"
@using Microsoft.JSInterop
@using StudentsManagement.Data
@inject IConfiguration config
@inject HttpClient Http
@inject IJSRuntime JsRunTime
@inject NavigationManager navigation
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Users List</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header"></div>
                            @if (users == null || !users.Any())
                            {
                                <p><em>Loading Users...</em></p>
                            }
                            else if (users.Any())
                            {
                                <div class="card-body">
                                    <table class="table table-striped table-hover">
                                        <thead>
                                            <tr>
                                                <th>Photo</th>
                                                <th>Full Name</th>
                                                <th>Phone Number</th>
                                                <th>Email</th>
                                                <th>IsActive</th>
                                                <th>Last Activity</th>
                                                <th>Edit</th>
                                                <th>Delete</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var user in users)
                                            {
                                                <tr>
                                                    <td>@user?.Photo</td>
                                                    <td>@user?.FullName</td>
                                                    <td>@user?.PhoneNumber</td>
                                                    <td>@user?.Email</td>
                                                    <td>@user?.IsActive</td>
                                                    <td>@user?.LastActivityDate</td>
                                                    <td>
                                                        <a class="btn btn-success" href="#"> Edit </a>
                                                    </td>
                                                    <td>
                                                        <a class="btn btn-danger" href="#"> Delete </a>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info"> There is no Users List Availlable</div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<ApplicationUser> users;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            users = await Http.GetFromJsonAsync<List<ApplicationUser>>("api/user");

            if (users == null)
            {
                users = new List<ApplicationUser>();
            }
        }
        catch (Exception ex)
        {
            // Log the error or display a user-friendly message
            Console.WriteLine($"Error fetching users: {ex.Message}");
            users = new List<ApplicationUser>(); // fallback to an empty list
        }
    }

    public string GetImagePath(string filename)
    {
        try
        {
            var imagestring = "";
            if (!string.IsNullOrEmpty(filename))
            {
                var path = Path.Combine(config.GetValue<String>("FileUploads")!, "user", filename);
                var imagebytes = File.ReadAllBytes(path);
                var imagebase64string = Convert.ToBase64String(imagebytes);

                imagestring = string.Format("data:img/jpg;base64,{0}", imagebase64string);

            }
            return imagestring;
        }
        catch (Exception ex)
        {
            return null;
        }
    }
}
